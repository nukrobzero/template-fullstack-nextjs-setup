// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  image          String?
  email          String?   @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  sessions       Session[]
  account        Account[]
}

// Necessary for Next auth
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String? @db.ObjectId
  type              String
  provider          String
  providerAccountId String?
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User?   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String?  @db.ObjectId
  expires      DateTime
  user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Services {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  slug          String
  servicesimage ServicesImage[]
  content       String?
  description   String
  formNumber    Int
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  subservices   Subservices[]
}

model ServicesImage {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  Services   Services? @relation(fields: [servicesId], references: [id], onDelete: Cascade)
  servicesId String?   @db.ObjectId
  title      String
  createdAt  DateTime  @default(now())
}

model Subservices {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  ServicesId       String?            @db.ObjectId
  title            String
  slug             String
  subservicesimage SubservicesImage[]
  content          String?
  metaDescription  String
  formNumber       Int
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Services         Services?          @relation(fields: [ServicesId], references: [id], onDelete: Cascade)
}

model SubservicesImage {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  Subservices   Subservices? @relation(fields: [subservicesId], references: [id], onDelete: Cascade)
  subservicesId String?      @db.ObjectId
  title         String
  createdAt     DateTime     @default(now())
}

model Category {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  Blogs       Blogs[]
}

model Blogs {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  categoryId  String?   @db.ObjectId
  title       String
  slug        String
  coverImage  String
  content     String?
  description String
  keywords    String
  date        String
  status      String
  createdAt   DateTime  @default(now())
  Category    Category? @relation(fields: [categoryId], references: [id])
}

model News {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String
  coverImage  String
  content     String?
  description String
  keywords    String
  status      String
  date        String
  createdAt   DateTime @default(now())
}

model Careers {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String
  content     String?
  description String
  status      String
  jobtype     String
  createdAt   DateTime @default(now())
}
